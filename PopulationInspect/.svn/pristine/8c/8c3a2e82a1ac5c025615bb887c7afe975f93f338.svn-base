$(function(){
	initMap();		//初始化地图
	/*var buidings = [
		{lat:30.3166160000,lng:120.3413560000,id:1},{lat:30.3178630000,lng:120.3396310000,id:2},{lat:30.3197330000,lng:120.3410320000,id:3},{lat:30.3172080000,lng:120.3470330000,id:3},
		{lat:30.3202630000,lng:120.3527820000,id:5},{lat:30.3182370000,lng:120.3513450000,id:5}
	];
	createBuidingTypeSix(buidings);*/
});

//GPS坐标转化为百度坐标
/**
 * 如果不需要坐标转化，可删除这段代码
 */
function translateBaiduArea(points){
	var points_baidu = [];
	var convertor = new BMap.Convertor();
	for(var i=0;i<points.length;i++){
		convertor.translate([points[i]],1,5,function(e){
			// console.log(e);
			if(e.status == 0){
				console.log(e);
				console.log(i);
				points_baidu.push(e.points[0]);
				if(i == points.length){
					console.log(i);
					createArea(points_baidu);
				}
			}else{
				console.log('坐标位置可能出错，请重新刷新网页');
			}
		});
	}
}

function translateBaiduBuiding(point){
	var convertor = new BMap.Convertor();
	convertor.translate([point],1,5,function(e){
		if(e.status == 0){
			var marker = new BMap.Marker(e.points[0]);
			map.addOverlay(marker);
		}
	})
}

//初始化地图
function initMap(){
	var map = new BMap.Map('map');
	var point = new BMap.Point(120.3491890000,30.3224770000);
	map.centerAndZoom(point,16);
	map.enableScrollWheelZoom();

	window.map = map;
}

//解析坐标字符串，返回point的数组
function areaParse(localStr){
	var locals = localStr.split('-');
	var points = [];
	var point = null;
	var local = [];
	for(var i=0;i<locals.length;i++){
		local = locals[i].split('|');
		point = new BMap.Point(local[0],local[1]);
		points.push(point);
	}

	return points;
}

/**
 * 登陆时显示的辖区
 * @param  {[String]} data [坐标字符串]
 */
function createJurisdection(data){
	map.clearOverlays();		//清除之前添加的所有覆盖物
	var points = [];
	points = areaParse(data);
	//translateBaiduArea(points);
	
	map.setViewport(points);

	var polygon = new BMap.Polygon(points);
	polygon.setFillColor('#677079');
	polygon.setFillOpacity(0.45);
	polygon.setStrokeColor('#677079');
	polygon.setStrokeWeight(2);

	map.addOverlay(polygon);
}

/**
 * 点击辖区树是对应生成的区域
 * @param  {[String]} data [坐标字符串]
 */
function createArea(data){
	map.clearOverlays();
	var points = [];
	points = areaParse(data);
	map.setViewport(points);

	var polygon = new BMap.Polygon(points);
	polygon.setFillColor('#677079');
	polygon.setFillOpacity(0.45);
	polygon.setStrokeColor('#677079');
	polygon.setStrokeWeight(2);

	map.addOverlay(polygon);
}

/**
 * 点击建筑，标注该建筑
 * @param  {[Float]} buid_lng [建筑经度]
 * @param  {[Float]} buid_lat [建筑纬度]
 */
function createBuiding(buid_lng,buid_lat,buidId,buidName){
	map.clearOverlays();
	var point = new BMap.Point(buid_lng,buid_lat);
	var marker = new BMap.Marker(point);
	map.addOverlay(marker);
	map.panTo(point);

	addEventBuidInfo(marker,buidId,buidName);
}

//为地图上的建筑添加点击事件，显示楼宇的详细信息
function addEventBuidInfo(marker,id,name){
	marker.addEventListener('click',function(){
		//显示楼宇信息,传入建筑ID
		console.log(id);
		getUnit(id);
		showBuildInfo();
	});
}

function createBuidingTypeOne(arr){
	map.clearOverlays();
	var point;
	var myIcon;
	for(var i=0;i<arr.length;i++){
		point = new BMap.Point(arr[i].lng,arr[i].lat);
		myIcon = new BMap.Icon('images/icon1.png',new BMap.Size(20,26));
		var marker = new BMap.Marker(point,{icon:myIcon});
		map.addOverlay(marker);
		addEventBuidInfo(marker,arr[i].id);
	}
}

function createBuidingTypeTwo(arr){
	var point;
	var myIcon;
	for(var i=0;i<arr.length;i++){
		point = new BMap.Point(arr[i].lng,arr[i].lat);
		myIcon = new BMap.Icon('images/icon2.png',new BMap.Size(20,26));
		var marker = new BMap.Marker(point,{icon:myIcon});
		map.addOverlay(marker);
		addEventBuidInfo(marker,arr[i].id);
	}
}

function createBuidingTypeThree(arr){
	var point;
	var myIcon;
	for(var i=0;i<arr.length;i++){
		point = new BMap.Point(arr[i].lng,arr[i].lat);
		myIcon = new BMap.Icon('images/icon3.png',new BMap.Size(20,26));
		var marker = new BMap.Marker(point,{icon:myIcon});
		map.addOverlay(marker);
		addEventBuidInfo(marker,arr[i].id);
	}
}

function createBuidingTypeFour(arr){
	var point;
	var myIcon;
	for(var i=0;i<arr.length;i++){
		point = new BMap.Point(arr[i].lng,arr[i].lat);
		myIcon = new BMap.Icon('images/icon4.png',new BMap.Size(20,26));
		var marker = new BMap.Marker(point,{icon:myIcon});
		map.addOverlay(marker);
		addEventBuidInfo(marker,arr[i].id);
	}
}

function createBuidingTypeFive(arr){
	var point;
	var myIcon;
	for(var i=0;i<arr.length;i++){
		point = new BMap.Point(arr[i].lng,arr[i].lat);
		myIcon = new BMap.Icon('images/icon5.png',new BMap.Size(20,26));
		var marker = new BMap.Marker(point,{icon:myIcon});
		map.addOverlay(marker);
		addEventBuidInfo(marker,arr[i].id);
	}}

function createBuidingTypeSix(arr){
	var point;
	var myIcon;
	for(var i=0;i<arr.length;i++){
		point = new BMap.Point(arr[i].lng,arr[i].lat);
		myIcon = new BMap.Icon('images/icon6.png',new BMap.Size(20,26));
		var marker = new BMap.Marker(point,{icon:myIcon});
		map.addOverlay(marker);
		addEventBuidInfo(marker,arr[i].id);
	}
}