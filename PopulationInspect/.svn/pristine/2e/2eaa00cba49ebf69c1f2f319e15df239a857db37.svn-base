<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="edu.hdu.lab.checkIn.mapper.PoliceMapper" >
  <resultMap id="BaseResultMap" type="edu.hdu.lab.checkIn.model.Police" >
    <id column="POLI_ID" property="poliId" jdbcType="INTEGER" />
    <result column="POLI_CODE" property="poliCode" jdbcType="CHAR" />
    <result column="POLI_NAME" property="poliName" jdbcType="VARCHAR" />
    <result column="POLI_PASS" property="poliPass" jdbcType="VARCHAR" />
    <result column="POLI_ROLE" property="poliRole" jdbcType="CHAR" />
    <result column="POLI_PHOTO" property="poliPhoto" jdbcType="VARCHAR" />
    <result column="POLI_OFFICE" property="poliOffice" jdbcType="CHAR" />
    <result column="POLI_DISTRICT" property="poliDistrict" jdbcType="VARCHAR" />
    <result column="TIME_LASTLOGIN" property="timeLastlogin" jdbcType="TIMESTAMP" />
    <result column="IP_LASTLOGIN" property="ipLastlogin" jdbcType="VARCHAR" />
    <result column="IS_DELETED" property="isDeleted" jdbcType="BIT" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    POLI_ID, POLI_CODE, POLI_NAME, POLI_PASS, POLI_ROLE, POLI_PHOTO, POLI_OFFICE, POLI_DISTRICT, 
    TIME_LASTLOGIN, IP_LASTLOGIN, IS_DELETED, RAMARK
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="edu.hdu.lab.checkIn.model.PoliceExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from police
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from police
    where POLI_ID = #{poliId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from police
    where POLI_ID = #{poliId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="edu.hdu.lab.checkIn.model.PoliceExample" >
    delete from police
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="edu.hdu.lab.checkIn.model.Police" >
    insert into police (POLI_ID, POLI_CODE, POLI_NAME, 
      POLI_PASS, POLI_ROLE, POLI_PHOTO, 
      POLI_OFFICE, POLI_DISTRICT, TIME_LASTLOGIN, 
      IP_LASTLOGIN, IS_DELETED, RAMARK
      )
    values (#{poliId,jdbcType=INTEGER}, #{poliCode,jdbcType=CHAR}, #{poliName,jdbcType=VARCHAR}, 
      #{poliPass,jdbcType=VARCHAR}, #{poliRole,jdbcType=CHAR}, #{poliPhoto,jdbcType=VARCHAR}, 
      #{poliOffice,jdbcType=CHAR}, #{poliDistrict,jdbcType=VARCHAR}, #{timeLastlogin,jdbcType=TIMESTAMP}, 
      #{ipLastlogin,jdbcType=VARCHAR}, #{isDeleted,jdbcType=BIT}, #{ramark,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="edu.hdu.lab.checkIn.model.Police" >
    insert into police
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="poliId != null" >
        POLI_ID,
      </if>
      <if test="poliCode != null" >
        POLI_CODE,
      </if>
      <if test="poliName != null" >
        POLI_NAME,
      </if>
      <if test="poliPass != null" >
        POLI_PASS,
      </if>
      <if test="poliRole != null" >
        POLI_ROLE,
      </if>
      <if test="poliPhoto != null" >
        POLI_PHOTO,
      </if>
      <if test="poliOffice != null" >
        POLI_OFFICE,
      </if>
      <if test="poliDistrict != null" >
        POLI_DISTRICT,
      </if>
      <if test="timeLastlogin != null" >
        TIME_LASTLOGIN,
      </if>
      <if test="ipLastlogin != null" >
        IP_LASTLOGIN,
      </if>
      <if test="isDeleted != null" >
        IS_DELETED,
      </if>
      <if test="ramark != null" >
        RAMARK,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="poliId != null" >
        #{poliId,jdbcType=INTEGER},
      </if>
      <if test="poliCode != null" >
        #{poliCode,jdbcType=CHAR},
      </if>
      <if test="poliName != null" >
        #{poliName,jdbcType=VARCHAR},
      </if>
      <if test="poliPass != null" >
        #{poliPass,jdbcType=VARCHAR},
      </if>
      <if test="poliRole != null" >
        #{poliRole,jdbcType=CHAR},
      </if>
      <if test="poliPhoto != null" >
        #{poliPhoto,jdbcType=VARCHAR},
      </if>
      <if test="poliOffice != null" >
        #{poliOffice,jdbcType=CHAR},
      </if>
      <if test="poliDistrict != null" >
        #{poliDistrict,jdbcType=VARCHAR},
      </if>
      <if test="timeLastlogin != null" >
        #{timeLastlogin,jdbcType=TIMESTAMP},
      </if>
      <if test="ipLastlogin != null" >
        #{ipLastlogin,jdbcType=VARCHAR},
      </if>
      <if test="isDeleted != null" >
        #{isDeleted,jdbcType=BIT},
      </if>
      <if test="ramark != null" >
        #{ramark,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="edu.hdu.lab.checkIn.model.PoliceExample" resultType="java.lang.Integer" >
    select count(*) from police
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update police
    <set >
      <if test="record.poliId != null" >
        POLI_ID = #{record.poliId,jdbcType=INTEGER},
      </if>
      <if test="record.poliCode != null" >
        POLI_CODE = #{record.poliCode,jdbcType=CHAR},
      </if>
      <if test="record.poliName != null" >
        POLI_NAME = #{record.poliName,jdbcType=VARCHAR},
      </if>
      <if test="record.poliPass != null" >
        POLI_PASS = #{record.poliPass,jdbcType=VARCHAR},
      </if>
      <if test="record.poliRole != null" >
        POLI_ROLE = #{record.poliRole,jdbcType=CHAR},
      </if>
      <if test="record.poliPhoto != null" >
        POLI_PHOTO = #{record.poliPhoto,jdbcType=VARCHAR},
      </if>
      <if test="record.poliOffice != null" >
        POLI_OFFICE = #{record.poliOffice,jdbcType=CHAR},
      </if>
      <if test="record.poliDistrict != null" >
        POLI_DISTRICT = #{record.poliDistrict,jdbcType=VARCHAR},
      </if>
      <if test="record.timeLastlogin != null" >
        TIME_LASTLOGIN = #{record.timeLastlogin,jdbcType=TIMESTAMP},
      </if>
      <if test="record.ipLastlogin != null" >
        IP_LASTLOGIN = #{record.ipLastlogin,jdbcType=VARCHAR},
      </if>
      <if test="record.isDeleted != null" >
        IS_DELETED = #{record.isDeleted,jdbcType=BIT},
      </if>
      <if test="record.ramark != null" >
        RAMARK = #{record.ramark,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update police
    set POLI_ID = #{record.poliId,jdbcType=INTEGER},
      POLI_CODE = #{record.poliCode,jdbcType=CHAR},
      POLI_NAME = #{record.poliName,jdbcType=VARCHAR},
      POLI_PASS = #{record.poliPass,jdbcType=VARCHAR},
      POLI_ROLE = #{record.poliRole,jdbcType=CHAR},
      POLI_PHOTO = #{record.poliPhoto,jdbcType=VARCHAR},
      POLI_OFFICE = #{record.poliOffice,jdbcType=CHAR},
      POLI_DISTRICT = #{record.poliDistrict,jdbcType=VARCHAR},
      TIME_LASTLOGIN = #{record.timeLastlogin,jdbcType=TIMESTAMP},
      IP_LASTLOGIN = #{record.ipLastlogin,jdbcType=VARCHAR},
      IS_DELETED = #{record.isDeleted,jdbcType=BIT},
      RAMARK = #{record.ramark,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="edu.hdu.lab.checkIn.model.Police" >
    update police
    <set >
      <if test="poliCode != null" >
        POLI_CODE = #{poliCode,jdbcType=CHAR},
      </if>
      <if test="poliName != null" >
        POLI_NAME = #{poliName,jdbcType=VARCHAR},
      </if>
      <if test="poliPass != null" >
        POLI_PASS = #{poliPass,jdbcType=VARCHAR},
      </if>
      <if test="poliRole != null" >
        POLI_ROLE = #{poliRole,jdbcType=CHAR},
      </if>
      <if test="poliPhoto != null" >
        POLI_PHOTO = #{poliPhoto,jdbcType=VARCHAR},
      </if>
      <if test="poliOffice != null" >
        POLI_OFFICE = #{poliOffice,jdbcType=CHAR},
      </if>
      <if test="poliDistrict != null" >
        POLI_DISTRICT = #{poliDistrict,jdbcType=VARCHAR},
      </if>
      <if test="timeLastlogin != null" >
        TIME_LASTLOGIN = #{timeLastlogin,jdbcType=TIMESTAMP},
      </if>
      <if test="ipLastlogin != null" >
        IP_LASTLOGIN = #{ipLastlogin,jdbcType=VARCHAR},
      </if>
      <if test="isDeleted != null" >
        IS_DELETED = #{isDeleted,jdbcType=BIT},
      </if>
      <if test="ramark != null" >
        RAMARK = #{ramark,jdbcType=VARCHAR},
      </if>
    </set>
    where POLI_ID = #{poliId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="edu.hdu.lab.checkIn.model.Police" >
    update police
    set POLI_CODE = #{poliCode,jdbcType=CHAR},
      POLI_NAME = #{poliName,jdbcType=VARCHAR},
      POLI_PASS = #{poliPass,jdbcType=VARCHAR},
      POLI_ROLE = #{poliRole,jdbcType=CHAR},
      POLI_PHOTO = #{poliPhoto,jdbcType=VARCHAR},
      POLI_OFFICE = #{poliOffice,jdbcType=CHAR},
      POLI_DISTRICT = #{poliDistrict,jdbcType=VARCHAR},
      TIME_LASTLOGIN = #{timeLastlogin,jdbcType=TIMESTAMP},
      IP_LASTLOGIN = #{ipLastlogin,jdbcType=VARCHAR},
      IS_DELETED = #{isDeleted,jdbcType=BIT},
      RAMARK = #{ramark,jdbcType=VARCHAR}
    where POLI_ID = #{poliId,jdbcType=INTEGER}
  </update>
  <!-- 用户函数  -->
  
  <!-- PoliceBasic  map -->
  
  <resultMap id="PoliceBasicMap" type="edu.hdu.lab.checkIn.dto.PoliceBasic" >
    <id column="POLI_ID" property="poliId" jdbcType="INTEGER" />
    <result column="POLI_CODE" property="poliCode" jdbcType="CHAR" />
    <result column="POLI_NAME" property="poliName" jdbcType="VARCHAR" />
    <result column="POLI_PASS" property="poliPass" jdbcType="VARCHAR" />
    <result column="POLI_ROLE" property="poliRole" jdbcType="CHAR" />
    <result column="POLI_PHOTO" property="poliPhoto" jdbcType="VARCHAR" />
    <result column="POLI_OFFICE" property="poliOffice" jdbcType="CHAR" />
    <result column="POLI_DISTRICT" property="poliDistrict" jdbcType="VARCHAR" />
    <result column="TIME_LASTLOGIN" property="timeLastlogin" jdbcType="TIMESTAMP" />
    <result column="IP_LASTLOGIN" property="ipLastlogin" jdbcType="VARCHAR" />
    <result column="IS_DELETED" property="isDeleted" jdbcType="BIT" />
    <result column="POLI_ROLE_NAME" property="poliRoleName" jdbcType="VARCHAR" />
    <result column="POLI_OFFICE_NAME" property="poliOfficeName" jdbcType="VARCHAR" />
  </resultMap>
  
  <!-- 用户登录 -->
  
  <select id="login" parameterType="java.lang.String" resultMap="PoliceBasicMap">
  	select 
  	p.*,d.ITEM_NAME as POLI_ROLE_NAME,
  	b.ITEM_NAME as POLI_OFFICE_NAME 
  	from dictionary as b,police as p,dictionary as d 
	where b.DICT_CLASS="FJPCS"  and p.POLI_OFFICE= b.DICT_ITEM 
	and d.DICT_CLASS="JYJS"  and p.POLI_ROLE= d.DICT_ITEM
	and p.POLI_CODE = #{user,jdbcType=VARCHAR};  
  </select>
  
  
</mapper>